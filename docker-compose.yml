version: '3.8'

services:
  # db:
  #   image: postgres:16
  #   container_name: db
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: hotel
  #     VERSION: V2_02
  #     BACKUP_PERIOD_HOURS: 1
  #     BACKUP_MAX_AMOUNT: 3
  #   volumes:
  #     - ./create-initdb.d:/docker-entrypoint-initdb.d
  #     - ./always-initdb.d:/always-initdb.d
  #     - ./custom-entrypoint.sh:/usr/local/bin/custom-entrypoint.sh
  #   entrypoint: bash /usr/local/bin/custom-entrypoint.sh postgres
  #   networks:
  #     - backend

  etcd1: &etcd
      image: hotel/patroni
      networks: [ backend ]
      environment:
          ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
          ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
          ETCD_INITIAL_CLUSTER: etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
          ETCD_INITIAL_CLUSTER_STATE: new
          ETCD_INITIAL_CLUSTER_TOKEN: tutorial
          ETCD_UNSUPPORTED_ARCH: arm64
      container_name: demo-etcd1
      hostname: etcd1
      command: etcd --name etcd1 --initial-advertise-peer-urls http://etcd1:2380

  etcd2:
      <<: *etcd
      container_name: demo-etcd2
      hostname: etcd2
      command: etcd --name etcd2 --initial-advertise-peer-urls http://etcd2:2380

  etcd3:
      <<: *etcd
      container_name: demo-etcd3
      hostname: etcd3
      command: etcd --name etcd3 --initial-advertise-peer-urls http://etcd3:2380

  haproxy:
      image: hotel/patroni
      networks: [ backend ]
      env_file: patroni/docker/patroni.env
      hostname: haproxy
      container_name: demo-haproxy
      ports:
          - "5000:5000"
          - "5001:5001"
      command: haproxy
      environment: &haproxy_env
          ETCDCTL_ENDPOINTS: http://etcd1:2379,http://etcd2:2379,http://etcd3:2379
          PATRONI_ETCD3_HOSTS: "'etcd1:2379','etcd2:2379','etcd3:2379'"
          PATRONI_SCOPE: demo

  patroni1:
      image: hotel/patroni
      networks: [ backend ]
      env_file: patroni/docker/patroni.env
      hostname: patroni1
      container_name: demo-patroni1
      environment:
          <<: *haproxy_env
          PATRONI_NAME: patroni1

  patroni2:
      image: hotel/patroni
      networks: [ backend ]
      env_file: patroni/docker/patroni.env
      hostname: patroni2
      container_name: demo-patroni2
      environment:
          <<: *haproxy_env
          PATRONI_NAME: patroni2

  patroni3:
      image: hotel/patroni
      networks: [ backend ]
      env_file: patroni/docker/patroni.env
      hostname: patroni3
      container_name: demo-patroni3
      environment:
          <<: *haproxy_env
          PATRONI_NAME: patroni3

  data_generator:
    container_name: demo-data_generator
    build:
      context: ./data_generator
      dockerfile: Dockerfile
    environment:
      NUM_RECORDS: 100
    networks:
      - backend

  sql_analyzer:
    container_name: demo-sql_analyzer
    build:
      context: ./sql_analyzer
      dockerfile: Dockerfile
    environment:
      NUM_ATTEMPTS: 20
    networks:
      - backend

networks:
  backend:
